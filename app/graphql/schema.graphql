schema {
  query: Query
  mutation: Mutation
}

type Query {
  hello: String
  users(first: Int, after: String): UserConnection
  products(first: Int, after: String): ProductConnection
  product(id: String): Product
}

type Mutation {
  hi: String
}

interface Node {
  id: String!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type UserConnection {
  edges: [UserEdge]
  pageInfo: PageInfo!
  total: Int
}

type UserEdge {
  cursor: String!
  node: User
}

type User implements Node {
  id: String!
  name: String
  role: String
  phonenum: String
  providers: String
  profile: String
}

type ProductConnection {
  edges: [ProductEdge]
  pageInfo: PageInfo!
  total: Int
}

type ProductEdge {
  cursor: String!
  node: Product
}

type Product implements Node {
  id: String!
  collection: Collection
}

type CollectionConnection {
  edges: [CollectionEdge]
  pageInfo: PageInfo!
  total: Int
}

type CollectionEdge {
  cursor: String!
  node: Collection
}

type Collection implements Node {
  id: String!
}
